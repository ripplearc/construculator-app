<?xml version="1.0" encoding="UTF-8"?>
<mutations version="1.0">
    <!-- AUTH FAKES MUTATION TESTING -->
    <!-- Targets: All files in fakes folder -->
    
   <files>
        <file>lib/libraries/auth/testing/fake_auth_notifier.dart</file>
    </files>

    <exclude>
        <!-- Exclude abstract classes and interfaces -->
        <regex pattern="abstract\s+class\s+\w+.*?{.*?}" dotAll="true"/>
        <regex pattern="abstract\s+class\s+\w+[^{]*{" dotAll="true"/>
        
        <!-- Exclude logging statements -->
        <regex pattern="print\s*\(" dotAll="false"/>
        <regex pattern="debugPrint\s*\(" dotAll="false"/>
        <regex pattern="log\s*\(" dotAll="false"/>
        
        <!-- Exclude fake implementation boilerplate -->
        <regex pattern="@override" dotAll="false"/>
        
        <!-- Exclude simple return statements in fakes (often just test data) -->
        <regex pattern="return\s+\[\]" dotAll="false"/>
        <regex pattern="return\s+{}" dotAll="false"/>
    </exclude>

    <rules>
    <!-- Fake implementation logic mutations -->
    <literal text="&amp;&amp;" id="and-to-or">
        <mutation text="||"/>
    </literal>
    <literal text="||" id="or-to-and">
        <mutation text="&amp;&amp;"/>
    </literal>
    <literal text="==" id="equals">
        <mutation text="!="/>
    </literal>
    <literal text="!=" id="not-equals">
        <mutation text="=="/>
    </literal>
    
    <!-- Conditional logic in fake implementations -->
    <regex pattern="[\s]if[\s]*\((.*?)\)[\s]*{" dotAll="true" id="if-negation">
        <mutation text=" if (!($1)) {"/>
    </regex>

    <!-- Mutate boolean flag assignment -->
    <regex pattern="shouldEmitAuthStateOnLogout = true;" id="fakeAuthNotifier.shouldEmitAuthStateOnLogout.trueToFalse">
        <mutation text="shouldEmitAuthStateOnLogout = false;"/>
    </regex>
    <regex pattern="shouldEmitAuthStateOnLogout = false;" id="fakeAuthNotifier.shouldEmitAuthStateOnLogout.falseToTrue">
        <mutation text="shouldEmitAuthStateOnLogout = true;"/>
    </regex>

    <!-- Mutate AuthStatus emitted -->
    <regex pattern="_authStateController.add\(AuthStatus.authenticated\);" id="fakeAuthNotifier.emitAuthenticatedToUnauthenticated">
        <mutation text="_authStateController.add(AuthStatus.unauthenticated);"/>
    </regex>
    <regex pattern="_authStateController.add\(AuthStatus.unauthenticated\);" id="fakeAuthNotifier.emitUnauthenticatedToAuthenticated">
        <mutation text="_authStateController.add(AuthStatus.authenticated);"/>
    </regex>
     <regex pattern="_authStateController.add\(AuthStatus.unknown\);" id="fakeAuthNotifier.emitUnknownToAuthenticated">
        <mutation text="_authStateController.add(AuthStatus.authenticated);"/>
    </regex>

    <!-- Remove list clear operations in reset -->
    <regex pattern="loginEvents.clear\(\);" id="fakeAuthNotifier.reset.removeLoginEventsClear">
        <mutation text="// loginEvents.clear();"/>
    </regex>
    <regex pattern="logoutEvents.clear\(\);" id="fakeAuthNotifier.reset.removeLogoutEventsClear">
        <mutation text="// logoutEvents.clear();"/>
    </regex>
    <regex pattern="stateChangedEvents.clear\(\);" id="fakeAuthNotifier.reset.removeStateChangedEventsClear">
        <mutation text="// stateChangedEvents.clear();"/>
    </regex>
    <regex pattern="setupProfileEvents.clear\(\);" id="fakeAuthNotifier.reset.removeSetupProfileEventsClear">
        <mutation text="// setupProfileEvents.clear();"/>
    </regex>

    <!-- Skip adding event to stream in emitLogin -->
    <regex pattern="(_loginController.add\(user\);)" id="fakeAuthNotifier.emitLogin.skipAddUser">
      <mutation text=" // $1"/>
    </regex>
    <!-- Skip adding auth state change in emitLogin -->
    <regex pattern="(_authStateController.add\(AuthStatus.authenticated\);)" id="fakeAuthNotifier.emitLogin.skipAddAuthState">
      <mutation text=" // $1"/>
    </regex>

     <!-- Skip adding event to stream in emitLogout -->
    <regex pattern="(_logoutController.add\(null\);)" id="fakeAuthNotifier.emitLogout.skipAddNull">
      <mutation text=" // $1"/>
    </regex>
</rules>

    <commands>
        <command group="fake-auth-notifier" expected-return="0">flutter test test/units/libraries/auth/fakes/notifiers/fake_auth_notifier_test.dart</command>
    </commands>

    <threshold failure="75">
        <rating over="85" name="A"/>
        <rating over="75" name="B"/>
        <rating over="65" name="C"/>
        <rating over="55" name="D"/>
        <rating over="35" name="E"/>
        <rating over="0" name="F"/>
    </threshold>
</mutations> 